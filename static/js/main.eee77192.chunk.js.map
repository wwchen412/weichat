{"version":3,"sources":["services/firebase.js","components/Header.js","components/Footer.js","pages/Home.js","pages/Chat.js","helpers/auth.js","pages/Signup.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","auth","db","database","Header","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","currentUser","onClick","signOut","Footer","Home","Chat","ref","useRef","useState","user","chats","content","readError","writeError","state","setState","useEffect","typeInput","focus","a","prestate","on","snapshot","forEach","snap","push","val","error","message","useLayoutEffect","current","scrollTop","scrollHeight","handleSubmit","event","preventDefault","trim","timestamp","Date","now","uid","email","map","chat","key","d","getHours","getMinutes","formatTime","onSubmit","e","input","onChange","target","value","signup","password","createUserWithEmailAndPassword","signin","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","SignUp","errorState","setErrorState","setEmail","setPassword","evt","googleSignIn","style","htmlFor","placeholder","name","Login","googleLogin","autoComplete","PrivateRoute","Component","component","authenticated","rest","render","props","pathname","from","location","PublicRoute","App","intialState","setAuthenticated","loading","setLoading","onAuthStateChanged","exact","path","Signup","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.eee77192.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/storage';\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyBWgHetjjRDzGTDr8FvogbV8mG1gGeLwjY\",\n    authDomain: \"weichat-2aac0.firebaseapp.com\",\n    databaseURL: \"https://weichat-2aac0.firebaseio.com\",\n    // projectId: \"weichat-2aac0\",\n    // storageBucket: \"weichat-2aac0.appspot.com\",\n    // messagingSenderId: \"690893761233\",\n    // appId: \"1:690893761233:web:4d4a83412c1aa7589033f0\",\n    // measurementId: \"G-WG9ZP3LS4B\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  \n  export const auth = firebase.auth;\n  export const db = firebase.database();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../services/firebase';\n\nfunction Header() {\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand-sm fixed-top navbar-light bg-light\">\n        <Link className=\"navbar-brand\" to=\"/\">WeiChat</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNavAltMarkup\">\n          {auth().currentUser\n            ? <div className=\"navbar-nav\">\n              <Link className=\"nav-item nav-link mr-3\" to=\"/chat\">Profile</Link>\n              <button className=\"btn btn-primary mr-3 mt-0\" onClick={() => auth().signOut()}>Logout</button>\n            </div>\n            : <div className=\"navbar-nav\">\n              <Link className=\"nav-item nav-link mr-3\" to=\"/login\">Sign In</Link>\n              <Link className=\"nav-item nav-link mr-3\" to=\"/signup\">Sign Up</Link>\n            </div>}\n        </div>\n      </nav>\n    </header>\n  );\n}\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"pt-5\">\n      <div className=\"container text-center\">\n        <p>&copy; WeiChat 2020.</p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;","import React from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { Link } from 'react-router-dom';\n\nconst Home =  () => {\n    return(\n        <div className=\"home\">\n        <Header></Header>\n        <section >\n          <div className=\"jumbotron jumbotron-fluid mb-0 main_bg homePage d-flex align-items-center\">\n            <div className=\"container text-center py-5\" >\n              <h1 className=\"display-4\"> WeiChat </h1>\n              <p className=\"lead\">一個專門用來跟我聊天的地方，快加入吧！</p>\n              <div className=\"mt-4\">\n                <Link className=\"btn btn-primary px-5 mr-3\" to=\"/signup\">註冊</Link>\n                <Link className=\"btn px-5 btn-outline-primary\" to=\"/login\">登入</Link>\n              </div>\n            </div>\n          </div>\n        </section>\n        <Footer></Footer>\n      </div>\n    )\n}\n    \n\nexport default Home;","import React, { useState, useEffect, useLayoutEffect,useRef } from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nimport { auth, db } from '../services/firebase'\n\nconst Chat = ()=>{\n    const ref = useRef(null);\n    const [state, setState] = useState({\n        user: auth().currentUser,\n        chats: [],\n        content: '',\n        readError: null,\n        writeError: null\n    })\n    useEffect(()=>{\n        typeInput.focus();\n        (async function chatFunction() {\n            setState((prestate)=>{\n                return{...prestate,readError: null}\n            })      \n            try{\n                db.ref(\"chats\").on(\"value\",snapshot => {\n                    let chats = [];\n                    snapshot.forEach((snap) => {\n                        chats.push(snap.val())\n                    });\n                    setState((prestate)=>{\n                            return{...prestate,chats:chats}\n                        })\n                    \n                })\n            }catch(error){\n                setState((prestate)=>{\n                    return{...prestate,readError: error.message}\n                })\n            }\n        })();\n        \n    },[])\n    \n    useLayoutEffect(()=>{\n        ref.current.scrollTop = ref.current.scrollHeight;\n    })\n    const handleChange = (event)=> {\n        setState({...state,content: event.target.value});\n    }\n    \n    const handleSubmit = async (event) => {\n\n        event.preventDefault();\n        if(state.content.trim() === ''){\n            return \n        }\n        setState({ ...state,writeError: null });\n        try {\n            await db.ref(\"chats\").push({\n                content: state.content,\n                timestamp: Date.now(),\n                uid: state.user.uid,\n                email: state.user.email\n        });\n            setState((prestate)=>{\n            return{...prestate,content: ''}\n        })\n        } catch (error) {\n            setState({ ...state,writeError: error.message });\n        }\n    }\n    const  formatTime = (timestamp)=> {\n        const d = new Date(timestamp);\n        // const time = `${d.getDate()}/${(d.getMonth()+1)}/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`;\n         const time = `${d.getHours()}:${d.getMinutes()}`;\n        return time;\n    }\n\n    let typeInput;\n    let chatSpace;\n    return(\n        <div>\n            <Header></Header>\n            <section className=\"chatArea p-3\">\n                <div className=\"chats\">\n                    <div className=\"chats_content\" ref={ref}>\n                        {state.chats.map(chat => {\n                            return <div key={chat.timestamp} className={( state.user.uid === chat.uid ? 'current_user': \"\")}>\n                                        <span className=\"chats_userName\">{chat.email ?chat.email:'陌生人'}</span>\n                                        <div className=\"chats_bubble\">\n                                            {chat.content}\n                                            <span className=\"chats_time\">{formatTime(chat.timestamp)}</span>\n                                        </div>\n                                    </div>\n                        })}\n                    </div>\n                <form   className=\"chats_input\"\n                        onSubmit={e=>handleSubmit(e)}>\n                    <div className=\"input-group\">\n                        <input  ref={(input)=> typeInput = input}\n                                onChange={e=>handleChange(e)} \n                                value={state.content}></input>\n                        {state.error ? <p>{state.writeError}</p> : null}\n                        <div className=\"input-group-append\">\n                            <button type=\"submit\" className=\"btn btn-primary\">Send</button>\n                        </div>\n                    </div>\n                </form>\n                </div>\n                <div>\n                Login in as: <strong>{state.user.email}</strong>\n                </div>\n            </section>\n            <Footer></Footer>\n        </div>\n    )\n}\nexport default Chat;","import { auth } from '../services/firebase';\n\nexport function signup(email, password) {\n    return auth().createUserWithEmailAndPassword(email, password);\n  }\n  \n  export function signin(email, password) {\n    return auth().signInWithEmailAndPassword(email, password);\n  }\n  \n  export function signInWithGoogle() {\n    const provider = new auth.GoogleAuthProvider();\n    return auth().signInWithPopup(provider);\n  }\n  \n  // export function signInWithGitHub() {\n  //   const provider = new auth.GithubAuthProvider();\n  //   return auth().signInWithPopup(provider);\n  // }\n  \n  export function logout() {\n    return auth().signOut();\n  }","import React, {  useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { signup ,signInWithGoogle } from '../helpers/auth';\n\nconst SignUp =  () => {\n    const [errorState, setErrorState] = useState(null);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n        setErrorState('')\n        try {\n          await signup(email, password);\n        } catch (error) {\n            setErrorState( error.message);\n        }\n      }\n    const googleSignIn = async (evt) => {\n        evt.preventDefault();\n        try {\n            await signInWithGoogle();\n          } catch (error) {\n            setErrorState( error.message);\n          }\n    }\n\n    return(\n    <div style={{'height':'100vh'}} className=\"bg-primary d-flex align-items-center h-full justify-content-center\">\n        <form   style={{'maxWidth':'495px','background':'#fff'}} \n                className=\"rounded p-3 w-100\"\n                onSubmit={(evt) => handleSubmit(evt)}>\n            <h1 className=\"text-center\">登入\n                <Link to='/'>WeiChat</Link>\n            </h1>\n            <p className=\"text-center\">創建帳號登入聊天</p>\n            <div className=\"form-group\">\n                <label htmlFor=\"signUpEmail\">信箱</label>\n                <input id=\"signUpEmail\" className=\"form-control\" placeholder=\"example@gmail.com\" name=\"email\" type=\"email\" value={email} onChange={e => setEmail(e.target.value)}></input>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"signUpPassword\">密碼</label>\n                <input id=\"signUpPassword\" className=\"form-control\" placeholder=\"至少八位數\" name=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)}></input>\n            </div>\n            <div>\n                {errorState ? <p>{errorState}</p> : null}\n                <button type=\"submit\" className=\"btn-primary btn\">註冊</button>\n                <button onClick={(e)=>googleSignIn(e) } type=\"button\" className=\"btn btn-google ml-1\">\n                Sign up with Google\n                </button>\n                <hr></hr>\n                <p>已經有帳號了嗎？<Link to=\"/login\">登入</Link></p>\n            </div>\n        </form>\n    </div>\n)\n}\n\nexport default SignUp;","import React, {  useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { signin, signInWithGoogle } from '../helpers/auth';\n\nconst Login = ()=> {\n    const [errorState, setErrorState] = useState(null);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setErrorState('')\n        try {\n          await signin(email, password);\n        } catch (error) {\n            setErrorState( error.message);\n        }\n      }\n    const googleLogin = async (evt) => {\n        evt.preventDefault();\n        try {\n            await signInWithGoogle();\n          } catch (error) {\n            setErrorState( error.message);\n          }\n    }\n    return(\n        <div style={{'height':'100vh'}} className=\"bg-primary d-flex align-items-center h-full justify-content-center\">\n            <form   style={{'max-width':'495px','background':'#fff'}} \n                    className=\"rounded p-3 w-100\"\n                    autoComplete=\"off\"\n                    onSubmit={(evt)=> handleSubmit(evt)}> \n                <h1 className=\"login_title text-center\">登入\n                    <Link to=\"/\">WeiChat</Link>\n                </h1>\n                <p className=\"text-center\">請輸入帳號密碼來登入</p>\n                <div className=\"form-group\">\n                <label htmlFor=\"signUpEmail\">信箱</label>\n                <input id=\"signUpEmail\" className=\"form-control\" placeholder=\"example@gmail.com\" name=\"email\" type=\"email\" value={email} onChange={e => setEmail(e.target.value)}></input>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"signUpPassword\">密碼</label>\n                    <input id=\"signUpPassword\" className=\"form-control\" placeholder=\"至少八位數\" name=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)}></input>\n                </div>\n                <div>\n                    {errorState ? <p>{errorState}</p> : null}\n                    <button type=\"submit\" className=\"btn-primary btn\">登入</button>\n                    <button type=\"button\" className=\"btn btn-google ml-1\" onClick={e => googleLogin(e)}>Google 登入</button>\n                    <hr></hr>\n                    <p>沒有帳號密碼嗎？<Link to=\"/signup\">註冊</Link></p>\n                </div>\n            </form>\n        </div>\n)}\nexport default Login;","import React ,{ useState, useEffect } from 'react';\nimport { Route, \n  BrowserRouter as Router,\n  Switch,\n  Redirect } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Chat from './pages/Chat';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport { auth } from './services/firebase';\n\n\nfunction PrivateRoute({ component: Component, authenticated , ...rest}){\n  return (\n    <Route \n      {...rest}\n      render={(props) => authenticated === true \n        ? <Component  {...props}/>\n        : <Redirect  to={{pathname: '/login', state: { from: props.location } }} />}\n    />\n  )\n}\n\nfunction PublicRoute({component: Component, authenticated, ...rest}){\n  return(\n    <Route \n      {...rest}\n      render={(props)=> authenticated === false\n        ? <Component {...props}/>\n        : <Redirect to='/chat' />\n      }\n    />\n  )\n}\n\nconst App = () =>{\n\n  const intialState = {\n    authenticated: false,\n    loading: true\n  }\n  const [authenticated, setAuthenticated] = useState(intialState.authenticated)\n  const [loading, setLoading] = useState(intialState.loading)\n\n  useEffect(() => {\n    auth().onAuthStateChanged(user => {\n      if(user){\n        setAuthenticated(true)\n        setLoading(false)\n      }else{\n        setAuthenticated(false)\n        setLoading(false)\n      }\n    })\n  },[])\n  return (\n    loading === true ? <h2>Loading...</h2> : \n    <Router>\n      <Switch>\n        <Route exact path='/' component={Home}></Route>\n        <PrivateRoute path=\"/chat\" authenticated={authenticated} component={Chat}></PrivateRoute>\n        <PublicRoute path=\"/signup\" authenticated={authenticated} component={Signup}></PublicRoute>\n        <PublicRoute path=\"/login\" authenticated={authenticated} component={Login}></PublicRoute>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}